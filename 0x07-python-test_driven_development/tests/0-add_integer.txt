Import function from module:
	>>> add_integer = __import__('0-add_integer').add_integer

Test one pass int:
	>>> add_integer(1)
	99

Test two pass zero:
	>>> add_integer(0)
	98

Test three add float:
	>>> add_integer(1.8)
	99

Test four add negative integer:
	>>> add_integer(-1)
	97

Test five add negative float:
	>>> add_integer(-1.8)
	97

Test 6 add two int:
	>>> add_integer(1, 3)
	4

test 7 add two big int:
	>>> add_integer(889988992, 9988992)
	899977984

test 8 add positive and negative big int:
	>>> add_integer(889988992, -9988992)
	880000000

test 9 add negative and positive big int
	>>> add_integer(-889988992, 9988992)
	-880000000

test 10 add int and float:
	>>> add_integer(2, 3.8)
	5

test 11 add float and int:
	>>> add_integer(12.768, 3)
	15

test 12 add two floats:
	>>> add_integer(7.876, 6.987)
	13

test 13 Add infinity:
	>>> add_integer(float('inf'), float('-inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

test 14 Add nan:
	>>> add_integer(0, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

test 15 string and int:
	>>> add_integer("string", 8)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

test 16 int and string:
	>>> add_integer(8, "string")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

test 17 two invalid args:
	>>> add_integer(None, None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

test 18 two strings:
	>>> add_integer("string1", "string2")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

test 19 overflow:
	>>> add_integer(float('inf'), 0)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
