Import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal matrix:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

Test one el:
    >>> matrix_divided([[2]], 2)
    [[1.0]]

Test unmodified matrix:
    >>> m = [[2, 4, 8], [1, 2, 3]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]
    >>> m[1][1]
    2

Test divide by negative:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]]], -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

Test divide by inf:
    >>> matrix_divided([[[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test divide by nan:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]

Test divide by zero:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test none instead of matrix:
    >>> matrix_divided(none, 1)
    Traceback (most recent call last):
    ...
    NameError: name 'none' is not defined

Test empty matrix:
    >>> matrix_divided([[]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with string as a list element
    >>> matrix_divided([[1, 2, 3], ["string", 4, 5]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test different list length
    >>> matrix_divided([[2, 4, 6], [7, 8]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test empty matrix:
    >>> matrix_divided([[], [], []], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Test string instead of list:
    >>> matrix_divided("string", 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Test empty list:
    >>> matrix_divided([], 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test divide by string:
    >>> matrix_divided([[5]], "string")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test missing 1 arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
